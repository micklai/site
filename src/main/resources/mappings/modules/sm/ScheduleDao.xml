<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sm.dao.ScheduleDao">

	<resultMap id="scheduleAndScheduleAttachment" type="Schedule">
		<id property="id" column="id" />
		<result property="user.id" column="user.id" />
		<result property="typeId" column="typeId" />
		<result property="typeName" column="typeName" />
		<result property="title" column="title" />
		<result property="time" column="time" />
		<result property="address" column="address" />
		<result property="xPos" column="xPos" />
		<result property="yPos" column="yPos" />
		<result property="remark" column="remark" />
		<result property="visitName" column="visitName" />
		<result property="resultState" column="resultState" />
		<result property="autoFlag" column="autoFlag" />

		<collection property="scheduleAttachmentList" ofType="ScheduleAttachment">
			<id property="id" column="scheduleAttachmentList.id" />
			<id property="scheduleId.id" column="scheduleAttachmentList.schedule.id" />
			<id property="attachmentName" column="scheduleAttachmentList.attachmentName" />
			<id property="attachmentPath" column="scheduleAttachmentList.attachmentPath" />
			<id property="attachmentType" column="scheduleAttachmentList.attachmentType" />
			<id property="remarks" column="scheduleAttachmentList.remarks" />
		</collection>
		<collection property="officeList" ofType="Office">
			<id property="id" column="officeList.id" />
		</collection>
	</resultMap>
    
	<sql id="scheduleColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.type_id AS "typeId",
		a.type_name AS "typeName",
		a.title AS "title",
		a.time AS "time",
		a.address AS "address",
		a.x_pos AS "xPos",
		a.y_pos AS "yPos",
		a.remark AS "remark",
		a.visit_name AS "visitName",
		a.result_state AS "resultState",
		a.auto_flag AS "autoFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u2.name AS "user.name"
	</sql>
	
	<sql id="scheduleJoins">
		LEFT JOIN sys_user u2 ON u2.id = a.user_id
		LEFT JOIN sm_schedule_attachment b ON b.schedule_id = a.id
	</sql>
    
	<select id="get" resultType="Schedule">
		SELECT 
			<include refid="scheduleColumns"/>
		FROM sm_schedule a
		<include refid="scheduleJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultMap="scheduleAndScheduleAttachment">
		SELECT 
			<include refid="scheduleColumns"/>
		FROM sm_schedule a
		<include refid="scheduleJoins"/>
		LEFT JOIN sys_office o on u2.office_id = o.id
		LEFT JOIN sys_office c on u2.company_id = c.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="typeName != null and typeName != ''">
				AND a.type_name = #{typeName}
			</if>
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
			<if test="user != null and user.id != null and user.id != ''">
				AND a.user_id = #{user.id}
			</if>
			<if test="beginScheduleTime != null and beginScheduleTime != '' and endScheduleTime != null and endScheduleTime != ''">
				AND a.time BETWEEN #{beginScheduleTime} AND #{endScheduleTime}
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page != null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Schedule">
		SELECT 
			<include refid="scheduleColumns"/>
		FROM sm_schedule a
		<include refid="scheduleJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="#{user.id} != null and #{user.id} != ''">
				AND a.user = #{user.id}
			</if>
		</where>		
		<choose>
			<!--<when test="page !=null and page.orderBy != null and page.orderBy != ''">-->
				<!--ORDER BY ${page.orderBy}-->
			<!--</when>-->
			<!--<otherwise>-->
				<!--ORDER BY a.update_date DESC-->
			<!--</otherwise>-->
		</choose>
		orderBy a.TIME
	</select>
	
	<insert id="insert">
		INSERT INTO sm_schedule(
			id,
			user_id,
			type_id,
			type_name,
			title,
			time,
			address,
			x_pos,
			y_pos,
			remark,
			visit_name,
			result_state,
			auto_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{user.id},
			#{typeId},
			#{typeName},
			#{title},
			#{time},
			#{address},
			#{xPos},
			#{yPos},
			#{remark},
			#{visitName},
			#{resultState},
			#{autoFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sm_schedule SET 	
			user_id = #{user.id},
			type_id = #{typeId},
			type_name = #{typeName},
			title = #{title},
			time = #{time},
			address = #{address},
			x_pos = #{xPos},
			y_pos = #{yPos},
			remark = #{remark},
			visit_name = #{visitName},
			result_state = #{resultState},
			auto_flag = #{autoFlag},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sm_schedule SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>